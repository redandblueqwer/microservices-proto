syntax = "proto3";

package order;

option go_package = "github.com/redandblueqwer/microservices-proto/golang/order";

// 订单状态枚举
enum OrderStatus {
  ORDER_STATUS_UNKNOWN = 0;
  ORDER_STATUS_CREATED = 1;
  ORDER_STATUS_PENDING = 2;
  ORDER_STATUS_COMPLETED = 3;
  ORDER_STATUS_CANCELLED = 4;
}

// 订单项
message Item {
  string product_id = 1;
  string name = 2;
  int32 quantity = 3;
  double price = 4;
}

// 创建订单请求
message CreateOrderRequest {
  int64 user_id = 1;
  repeated Item items = 2;
  double total_price = 3;
}

// 创建订单响应
message CreateOrderResponse {
  string order_id = 1;
  OrderStatus status = 2;
}

// 获取订单请求
message GetOrderRequest {
  string order_id = 1;
}

// 获取订单响应
message GetOrderResponse {
  string order_id = 1;
  int64 user_id = 2;
  repeated Item items = 3;
  double total_price = 4;
  OrderStatus status = 5;
  string created_at = 6;
}

// 更新订单状态请求
message UpdateOrderStatusRequest {
  string order_id = 1;
  OrderStatus status = 2;
}

// 更新订单状态响应
message UpdateOrderStatusResponse {
  string order_id = 1;
  OrderStatus status = 2;
  bool success = 3;
}

// 订单服务定义
service Order {
  // 创建订单
  rpc Create(CreateOrderRequest) returns (CreateOrderResponse);
  
  // 获取订单
  rpc Get(GetOrderRequest) returns (GetOrderResponse);
  
  // 更新订单状态
  rpc UpdateStatus(UpdateOrderStatusRequest) returns (UpdateOrderStatusResponse);
}